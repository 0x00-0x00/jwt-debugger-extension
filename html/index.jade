doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, minimum-scale=1.0, maximum-scale=1.0')
    meta(name='author', content='auth0.com')
    meta(name='description', content='JSON Web Token (JWT) is a compact URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is digitally signed using JSON Web Signature (JWS).')
    title JSON Web Tokens - jwt.io

    // Just for debugging purposes. Don't actually copy this line!
    | <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->
    link(rel="stylesheet", type="text/css", href="//cloud.typography.com/7834932/650606/css/fonts.css")
    link(rel="stylesheet", type="text/css", href="//fonts.googleapis.com/css?family=Roboto+Mono")

    link(rel="stylesheet", href="/css/bootstrap.min.css")

    // build:css dist/css/app.css
    link(rel='stylesheet', href='/vendor/codemirror/lib/codemirror.css', type='text/css', media='all')
    link(rel='stylesheet', href='/vendor/codemirror/addon/lint/lint.css', type='text/css', media='all')
    link(rel="stylesheet", href='/css/budicon.css', type="text/css", media="all")
    link(rel='stylesheet', href='/css/app.css', type='text/css', media='all')

    link(rel='icon', type='image/png', sizes='192x192', href='/img/favicon/android-icon-192x192.png')
    link(rel='icon', type='image/png', sizes='32x32', href='/img/favicon/favicon-32x32.png')
    link(rel='icon', type='image/png', sizes='96x96', href='/img/favicon/favicon-96x96.png')
    link(rel='icon', type='image/png', sizes='16x16', href='/img/favicon/favicon-16x16.png')
    link(rel='manifest', href='/img/favicon/manifest.json')
    meta(name='msapplication-TileColor', content='#000000')
    meta(name='msapplication-TileImage', content='/img/favicon/ms-icon-144x144.png')
    meta(name='theme-color', content='#000000')

  body.load

    section#debugger.debugger-jwt
      .container
        //- a(name='debugger')
        h1 Debugger

        .jwt-playground

          .algorithm
            span Algorithm
            .hide
              label
                input(type='radio', name='algorithm', value='HS256', checked='')
              label
                input(type='radio', name='algorithm', value='RS256')
            .jwt-select
              select
                option(name='algorithm',value='HS256', selected='') HS256
                option(name='algorithm',value='RS256') RS256

          .algorithm-code
            .tab-nav
              .tab-link.current
                a(href='#encoded-jwt') Encoded
                  small paste a token here
              .tab-link
                a(href='#decoded-jwt') Decoded
                  small edit the payload and secret (only HS256 supported)

            .tab-content
              #encoded-jwt.box-content.current
                .input.js-input
              #decoded-jwt.box-content
                .output
                  .jwt-explained.jwt-header
                    p.text-line HEADER:
                      span ALGORITHM & TOKEN TYPE
                    .js-header

                  .jwt-explained.jwt-payload
                    p.text-line PAYLOAD:
                      span DATA
                    .js-payload

                  .jwt-explained.jwt-signature
                    p.text-line VERIFY SIGNATURE
                    pre.pre-encode.HS256.
                      HMACSHA256(
                        base64UrlEncode(header) + "." +
                        base64UrlEncode(payload),
                        <input type="text" name="secret" value="secret">
                      )<span class="is-base64-encoded-label"> <input id="is-base64-encoded" type="checkbox" name="is-base64-encoded"><label for="is-base64-encoded">secret base64 encoded</label></span>
                    pre.pre-encode.RS256.
                      RSASHA256(
                        base64UrlEncode(header) + "." +
                        base64UrlEncode(payload),
                        <textarea rows="4" name="public-key" placeholder="Public Key or Certificate. Enter it in plain text only if you want to verify a token"></textarea>,
                        <textarea rows="5" name="private-key" placeholder="Private Key (RSA). Enter the it in plain text only if you want to generate a new token. The key never leaves your browser."></textarea>
                      )

          .validation-status.js-signature

    //
      Bootstrap core JavaScript
      ==================================================
    // Placed at the end of the document so the pages load faster
    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js')
    script(src='/js/bootstrap.min.js')
    // build:js dist/js/app.js
    script(src='/vendor/zepto/zepto.js')
    script(src='/vendor/jsonlint/lib/jsonlint.js')
    script(src='/vendor/json-sans-eval-min/index.js')
    script(src='/vendor/codemirror/lib/codemirror.js')
    script(src='/vendor/codemirror/mode/javascript/javascript.js')
    script(src='/vendor/codemirror/addon/lint/lint.js')
    script(src='/vendor/codemirror/addon/lint/javascript-lint.js')
    script(src='/vendor/codemirror/addon/lint/json-lint.js')
    script(src='/vendor/jsrsasign/index.js')
    script(src='/vendor/jws.js/index.js')
    script(src='/js/jwt_mode.js')
    script(src='/js/jwt.js')

    script(src='/js/isotope.pkgd.min.js')
    script(src='/js/flipclock.js')
    script(src='/js/accordion.js')

    script(src='/js/app.js')
    // endbuild
